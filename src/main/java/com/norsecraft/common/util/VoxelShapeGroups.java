package com.norsecraft.common.util;

import net.minecraft.block.Block;
import net.minecraft.util.function.BooleanBiFunction;
import net.minecraft.util.shape.VoxelShapes;

import java.util.stream.Stream;

public class VoxelShapeGroups {

    public static final VoxelShapeGroup LOG_CHAIR_GROUP = new VoxelShapeGroup(Stream.of(Block.createCuboidShape(6, 0, 0, 10, 8, 1),
            Block.createCuboidShape(4, 0, 1, 6, 8, 2),
            Block.createCuboidShape(3, 0, 2, 4, 8, 3),
            Block.createCuboidShape(2, 0, 3, 3, 8, 4),
            Block.createCuboidShape(1, 0, 4, 2, 8, 6),
            Block.createCuboidShape(0, 0, 6, 1, 8, 10),
            Block.createCuboidShape(15, 0, 6, 16, 8, 10),
            Block.createCuboidShape(14, 0, 4, 15, 8, 6),
            Block.createCuboidShape(13, 0, 3, 14, 8, 4),
            Block.createCuboidShape(12, 0, 2, 13, 8, 3),
            Block.createCuboidShape(10, 0, 1, 12, 8, 2),
            Block.createCuboidShape(14, 0, 10, 15, 8, 12),
            Block.createCuboidShape(13, 0, 12, 14, 8, 13),
            Block.createCuboidShape(12, 0, 13, 13, 8, 14),
            Block.createCuboidShape(10, 0, 14, 12, 8, 15),
            Block.createCuboidShape(6, 0, 15, 10, 8, 16),
            Block.createCuboidShape(4, 0, 14, 6, 8, 15),
            Block.createCuboidShape(3, 0, 13, 4, 8, 14),
            Block.createCuboidShape(2, 0, 12, 3, 8, 13),
            Block.createCuboidShape(1, 0, 10, 2, 8, 12),
            Block.createCuboidShape(6, 0, 1, 10, 8, 15),
            Block.createCuboidShape(10, 0, 2, 12, 8, 14),
            Block.createCuboidShape(4, 0, 2, 6, 8, 14),
            Block.createCuboidShape(3, 0, 3, 4, 8, 13),
            Block.createCuboidShape(2, 0, 4, 3, 8, 12),
            Block.createCuboidShape(1, 0, 6, 2, 8, 10),
            Block.createCuboidShape(12, 0, 3, 13, 8, 13),
            Block.createCuboidShape(13, 0, 4, 14, 8, 12),
            Block.createCuboidShape(14, 0, 6, 15, 8, 10)
    ).reduce((v1, v2) -> {
        return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
    }).get(),
            Stream.of(
                    Block.createCuboidShape(15, 0, 6, 16, 8, 10),
                    Block.createCuboidShape(14, 0, 4, 15, 8, 6),
                    Block.createCuboidShape(13, 0, 3, 14, 8, 4),
                    Block.createCuboidShape(12, 0, 2, 13, 8, 3),
                    Block.createCuboidShape(10, 0, 1, 12, 8, 2),
                    Block.createCuboidShape(6, 0, 0, 10, 8, 1),
                    Block.createCuboidShape(6, 0, 15, 10, 8, 16),
                    Block.createCuboidShape(10, 0, 14, 12, 8, 15),
                    Block.createCuboidShape(12, 0, 13, 13, 8, 14),
                    Block.createCuboidShape(13, 0, 12, 14, 8, 13),
                    Block.createCuboidShape(14, 0, 10, 15, 8, 12),
                    Block.createCuboidShape(4, 0, 14, 6, 8, 15),
                    Block.createCuboidShape(3, 0, 13, 4, 8, 14),
                    Block.createCuboidShape(2, 0, 12, 3, 8, 13),
                    Block.createCuboidShape(1, 0, 10, 2, 8, 12),
                    Block.createCuboidShape(0, 0, 6, 1, 8, 10),
                    Block.createCuboidShape(1, 0, 4, 2, 8, 6),
                    Block.createCuboidShape(2, 0, 3, 3, 8, 4),
                    Block.createCuboidShape(3, 0, 2, 4, 8, 3),
                    Block.createCuboidShape(4, 0, 1, 6, 8, 2),
                    Block.createCuboidShape(1, 0, 6, 15, 8, 10),
                    Block.createCuboidShape(2, 0, 10, 14, 8, 12),
                    Block.createCuboidShape(2, 0, 4, 14, 8, 6),
                    Block.createCuboidShape(3, 0, 3, 13, 8, 4),
                    Block.createCuboidShape(4, 0, 2, 12, 8, 3),
                    Block.createCuboidShape(6, 0, 1, 10, 8, 2),
                    Block.createCuboidShape(3, 0, 12, 13, 8, 13),
                    Block.createCuboidShape(4, 0, 13, 12, 8, 14),
                    Block.createCuboidShape(6, 0, 14, 10, 8, 15)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(6, 0, 15, 10, 8, 16),
                    Block.createCuboidShape(10, 0, 14, 12, 8, 15),
                    Block.createCuboidShape(12, 0, 13, 13, 8, 14),
                    Block.createCuboidShape(13, 0, 12, 14, 8, 13),
                    Block.createCuboidShape(14, 0, 10, 15, 8, 12),
                    Block.createCuboidShape(15, 0, 6, 16, 8, 10),
                    Block.createCuboidShape(0, 0, 6, 1, 8, 10),
                    Block.createCuboidShape(1, 0, 10, 2, 8, 12),
                    Block.createCuboidShape(2, 0, 12, 3, 8, 13),
                    Block.createCuboidShape(3, 0, 13, 4, 8, 14),
                    Block.createCuboidShape(4, 0, 14, 6, 8, 15),
                    Block.createCuboidShape(1, 0, 4, 2, 8, 6),
                    Block.createCuboidShape(2, 0, 3, 3, 8, 4),
                    Block.createCuboidShape(3, 0, 2, 4, 8, 3),
                    Block.createCuboidShape(4, 0, 1, 6, 8, 2),
                    Block.createCuboidShape(6, 0, 0, 10, 8, 1),
                    Block.createCuboidShape(10, 0, 1, 12, 8, 2),
                    Block.createCuboidShape(12, 0, 2, 13, 8, 3),
                    Block.createCuboidShape(13, 0, 3, 14, 8, 4),
                    Block.createCuboidShape(14, 0, 4, 15, 8, 6),
                    Block.createCuboidShape(6, 0, 1, 10, 8, 15),
                    Block.createCuboidShape(4, 0, 2, 6, 8, 14),
                    Block.createCuboidShape(10, 0, 2, 12, 8, 14),
                    Block.createCuboidShape(12, 0, 3, 13, 8, 13),
                    Block.createCuboidShape(13, 0, 4, 14, 8, 12),
                    Block.createCuboidShape(14, 0, 6, 15, 8, 10),
                    Block.createCuboidShape(3, 0, 3, 4, 8, 13),
                    Block.createCuboidShape(2, 0, 4, 3, 8, 12),
                    Block.createCuboidShape(1, 0, 6, 2, 8, 10)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(0, 0, 6, 1, 8, 10),
                    Block.createCuboidShape(1, 0, 10, 2, 8, 12),
                    Block.createCuboidShape(2, 0, 12, 3, 8, 13),
                    Block.createCuboidShape(3, 0, 13, 4, 8, 14),
                    Block.createCuboidShape(4, 0, 14, 6, 8, 15),
                    Block.createCuboidShape(6, 0, 15, 10, 8, 16),
                    Block.createCuboidShape(6, 0, 0, 10, 8, 1),
                    Block.createCuboidShape(4, 0, 1, 6, 8, 2),
                    Block.createCuboidShape(3, 0, 2, 4, 8, 3),
                    Block.createCuboidShape(2, 0, 3, 3, 8, 4),
                    Block.createCuboidShape(1, 0, 4, 2, 8, 6),
                    Block.createCuboidShape(10, 0, 1, 12, 8, 2),
                    Block.createCuboidShape(12, 0, 2, 13, 8, 3),
                    Block.createCuboidShape(13, 0, 3, 14, 8, 4),
                    Block.createCuboidShape(14, 0, 4, 15, 8, 6),
                    Block.createCuboidShape(15, 0, 6, 16, 8, 10),
                    Block.createCuboidShape(14, 0, 10, 15, 8, 12),
                    Block.createCuboidShape(13, 0, 12, 14, 8, 13),
                    Block.createCuboidShape(12, 0, 13, 13, 8, 14),
                    Block.createCuboidShape(10, 0, 14, 12, 8, 15),
                    Block.createCuboidShape(1, 0, 6, 15, 8, 10),
                    Block.createCuboidShape(2, 0, 4, 14, 8, 6),
                    Block.createCuboidShape(2, 0, 10, 14, 8, 12),
                    Block.createCuboidShape(3, 0, 12, 13, 8, 13),
                    Block.createCuboidShape(4, 0, 13, 12, 8, 14),
                    Block.createCuboidShape(6, 0, 14, 10, 8, 15),
                    Block.createCuboidShape(3, 0, 3, 13, 8, 4),
                    Block.createCuboidShape(4, 0, 2, 12, 8, 3),
                    Block.createCuboidShape(6, 0, 1, 10, 8, 2)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get());

    public static final VoxelShapeGroup OLD_CAMPFIRE = new VoxelShapeGroup(Stream.of(
            Block.createCuboidShape(7, 0, 0, 9, 1, 2),
            Block.createCuboidShape(0, 0, 7, 2, 1, 9),
            Block.createCuboidShape(14, 0, 7, 16, 1, 9),
            Block.createCuboidShape(7, 0, 14, 9, 1, 16),
            Block.createCuboidShape(5, 0, 1, 7, 1, 3),
            Block.createCuboidShape(9, 0, 1, 11, 1, 3),
            Block.createCuboidShape(1, 0, 5, 3, 1, 7),
            Block.createCuboidShape(1, 0, 9, 3, 1, 11),
            Block.createCuboidShape(13, 0, 9, 15, 1, 11),
            Block.createCuboidShape(13, 0, 5, 15, 1, 7),
            Block.createCuboidShape(9, 0, 13, 11, 1, 15),
            Block.createCuboidShape(5, 0, 13, 7, 1, 15),
            Block.createCuboidShape(3, 0, 11, 5, 1, 13),
            Block.createCuboidShape(11, 0, 11, 13, 1, 13),
            Block.createCuboidShape(11, 0, 3, 13, 1, 5),
            Block.createCuboidShape(3, 0, 3, 5, 1, 5),
            Block.createCuboidShape(3, 0, 1, 5, 0.5, 3),
            Block.createCuboidShape(1, 0, 2, 3, 0.5, 4),
            Block.createCuboidShape(13, 0, 3, 15, 0.5, 5),
            Block.createCuboidShape(11, 0, 13, 13, 0.5, 15),
            Block.createCuboidShape(3, 0, 13, 5, 0.5, 15),
            Block.createCuboidShape(1, 0, 12, 2, 0.5, 13),
            Block.createCuboidShape(15, 0, 4, 16, 0.25, 5),
            Block.createCuboidShape(13, 0, 11, 14, 0.5, 12),
            Block.createCuboidShape(11, 0, 2, 12, 0.25, 3),
            Block.createCuboidShape(8, 0, 7, 9, 1, 8),
            Block.createCuboidShape(9, 0, 7, 10, 0.5, 8),
            Block.createCuboidShape(8, 0, 9, 9, 0.5, 10),
            Block.createCuboidShape(7, 0, 9, 8, 1, 10),
            Block.createCuboidShape(7, 0, 8, 8, 0.5, 9),
            Block.createCuboidShape(6, 0, 7, 7, 1, 8),
            Block.createCuboidShape(9, 0, 8, 10, 0.25, 9),
            Block.createCuboidShape(6, 0, 8, 7, 0.25, 9),
            Block.createCuboidShape(6, 0, 6, 7, 0.25, 7),
            Block.createCuboidShape(7, 0, 5, 8, 1, 6),
            Block.createCuboidShape(8, 0, 6, 9, 0.25, 7),
            Block.createCuboidShape(7, 0, 6, 8, 0.5, 7),
            Block.createCuboidShape(11, 0, 8, 12, 1, 9),
            Block.createCuboidShape(9, 0, 6, 10, 1, 7),
            Block.createCuboidShape(10, 0, 7, 11, 0.5, 8),
            Block.createCuboidShape(10, 0, 6, 11, 0.25, 7),
            Block.createCuboidShape(8, 0, 10, 9, 0.5, 11),
            Block.createCuboidShape(4, 0, 8, 5, 1, 9),
            Block.createCuboidShape(9, 0, 9, 10, 0.5, 10),
            Block.createCuboidShape(5, 0, 9, 6, 1, 10),
            Block.createCuboidShape(5, 0, 6, 6, 0.5, 7),
            Block.createCuboidShape(8, 0, 5, 9, 0.5, 6),
            Block.createCuboidShape(9, 0, 5, 10, 0.25, 6),
            Block.createCuboidShape(9, 0, 10, 10, 0.25, 11),
            Block.createCuboidShape(10, 0, 9, 11, 0.25, 10),
            Block.createCuboidShape(10, 0, 8, 11, 0, 9),
            Block.createCuboidShape(8, 0, 8, 9, 0, 9),
            Block.createCuboidShape(7, 0, 7, 8, 0, 8),
            Block.createCuboidShape(7, 0, 10, 8, 0, 11),
            Block.createCuboidShape(6, 0, 9, 7, 0, 10),
            Block.createCuboidShape(5, 0, 8, 6, 0, 9)
    ).reduce((v1, v2) -> {
        return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
    }).get(),
            Stream.of(
                    Block.createCuboidShape(14, 0, 7, 16, 1, 9),
                    Block.createCuboidShape(7, 0, 0, 9, 1, 2),
                    Block.createCuboidShape(7, 0, 14, 9, 1, 16),
                    Block.createCuboidShape(0, 0, 7, 2, 1, 9),
                    Block.createCuboidShape(13, 0, 5, 15, 1, 7),
                    Block.createCuboidShape(13, 0, 9, 15, 1, 11),
                    Block.createCuboidShape(9, 0, 1, 11, 1, 3),
                    Block.createCuboidShape(5, 0, 1, 7, 1, 3),
                    Block.createCuboidShape(5, 0, 13, 7, 1, 15),
                    Block.createCuboidShape(9, 0, 13, 11, 1, 15),
                    Block.createCuboidShape(1, 0, 9, 3, 1, 11),
                    Block.createCuboidShape(1, 0, 5, 3, 1, 7),
                    Block.createCuboidShape(3, 0, 3, 5, 1, 5),
                    Block.createCuboidShape(3, 0, 11, 5, 1, 13),
                    Block.createCuboidShape(11, 0, 11, 13, 1, 13),
                    Block.createCuboidShape(11, 0, 3, 13, 1, 5),
                    Block.createCuboidShape(13, 0, 3, 15, 0.5, 5),
                    Block.createCuboidShape(12, 0, 1, 14, 0.5, 3),
                    Block.createCuboidShape(11, 0, 13, 13, 0.5, 15),
                    Block.createCuboidShape(1, 0, 11, 3, 0.5, 13),
                    Block.createCuboidShape(1, 0, 3, 3, 0.5, 5),
                    Block.createCuboidShape(3, 0, 1, 4, 0.5, 2),
                    Block.createCuboidShape(11, 0, 15, 12, 0.25, 16),
                    Block.createCuboidShape(4, 0, 13, 5, 0.5, 14),
                    Block.createCuboidShape(13, 0, 11, 14, 0.25, 12),
                    Block.createCuboidShape(8, 0, 8, 9, 1, 9),
                    Block.createCuboidShape(8, 0, 9, 9, 0.5, 10),
                    Block.createCuboidShape(6, 0, 8, 7, 0.5, 9),
                    Block.createCuboidShape(6, 0, 7, 7, 1, 8),
                    Block.createCuboidShape(7, 0, 7, 8, 0.5, 8),
                    Block.createCuboidShape(8, 0, 6, 9, 1, 7),
                    Block.createCuboidShape(7, 0, 9, 8, 0.25, 10),
                    Block.createCuboidShape(7, 0, 6, 8, 0.25, 7),
                    Block.createCuboidShape(9, 0, 6, 10, 0.25, 7),
                    Block.createCuboidShape(10, 0, 7, 11, 1, 8),
                    Block.createCuboidShape(9, 0, 8, 10, 0.25, 9),
                    Block.createCuboidShape(9, 0, 7, 10, 0.5, 8),
                    Block.createCuboidShape(7, 0, 11, 8, 1, 12),
                    Block.createCuboidShape(9, 0, 9, 10, 1, 10),
                    Block.createCuboidShape(8, 0, 10, 9, 0.5, 11),
                    Block.createCuboidShape(9, 0, 10, 10, 0.25, 11),
                    Block.createCuboidShape(5, 0, 8, 6, 0.5, 9),
                    Block.createCuboidShape(7, 0, 4, 8, 1, 5),
                    Block.createCuboidShape(6, 0, 9, 7, 0.5, 10),
                    Block.createCuboidShape(6, 0, 5, 7, 1, 6),
                    Block.createCuboidShape(9, 0, 5, 10, 0.5, 6),
                    Block.createCuboidShape(10, 0, 8, 11, 0.5, 9),
                    Block.createCuboidShape(10, 0, 9, 11, 0.25, 10),
                    Block.createCuboidShape(5, 0, 9, 6, 0.25, 10),
                    Block.createCuboidShape(6, 0, 10, 7, 0.25, 11),
                    Block.createCuboidShape(7, 0, 10, 8, 0, 11),
                    Block.createCuboidShape(7, 0, 8, 8, 0, 9),
                    Block.createCuboidShape(8, 0, 7, 9, 0, 8),
                    Block.createCuboidShape(5, 0, 7, 6, 0, 8),
                    Block.createCuboidShape(6, 0, 6, 7, 0, 7),
                    Block.createCuboidShape(7, 0, 5, 8, 0, 6)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(7, 0, 14, 9, 1, 16),
                    Block.createCuboidShape(14, 0, 7, 16, 1, 9),
                    Block.createCuboidShape(0, 0, 7, 2, 1, 9),
                    Block.createCuboidShape(7, 0, 0, 9, 1, 2),
                    Block.createCuboidShape(9, 0, 13, 11, 1, 15),
                    Block.createCuboidShape(5, 0, 13, 7, 1, 15),
                    Block.createCuboidShape(13, 0, 9, 15, 1, 11),
                    Block.createCuboidShape(13, 0, 5, 15, 1, 7),
                    Block.createCuboidShape(1, 0, 5, 3, 1, 7),
                    Block.createCuboidShape(1, 0, 9, 3, 1, 11),
                    Block.createCuboidShape(5, 0, 1, 7, 1, 3),
                    Block.createCuboidShape(9, 0, 1, 11, 1, 3),
                    Block.createCuboidShape(11, 0, 3, 13, 1, 5),
                    Block.createCuboidShape(3, 0, 3, 5, 1, 5),
                    Block.createCuboidShape(3, 0, 11, 5, 1, 13),
                    Block.createCuboidShape(11, 0, 11, 13, 1, 13),
                    Block.createCuboidShape(11, 0, 13, 13, 0.5, 15),
                    Block.createCuboidShape(13, 0, 12, 15, 0.5, 14),
                    Block.createCuboidShape(1, 0, 11, 3, 0.5, 13),
                    Block.createCuboidShape(3, 0, 1, 5, 0.5, 3),
                    Block.createCuboidShape(11, 0, 1, 13, 0.5, 3),
                    Block.createCuboidShape(14, 0, 3, 15, 0.5, 4),
                    Block.createCuboidShape(0, 0, 11, 1, 0.25, 12),
                    Block.createCuboidShape(2, 0, 4, 3, 0.5, 5),
                    Block.createCuboidShape(4, 0, 13, 5, 0.25, 14),
                    Block.createCuboidShape(7, 0, 8, 8, 1, 9),
                    Block.createCuboidShape(6, 0, 8, 7, 0.5, 9),
                    Block.createCuboidShape(7, 0, 6, 8, 0.5, 7),
                    Block.createCuboidShape(8, 0, 6, 9, 1, 7),
                    Block.createCuboidShape(8, 0, 7, 9, 0.5, 8),
                    Block.createCuboidShape(9, 0, 8, 10, 1, 9),
                    Block.createCuboidShape(6, 0, 7, 7, 0.25, 8),
                    Block.createCuboidShape(9, 0, 7, 10, 0.25, 8),
                    Block.createCuboidShape(9, 0, 9, 10, 0.25, 10),
                    Block.createCuboidShape(8, 0, 10, 9, 1, 11),
                    Block.createCuboidShape(7, 0, 9, 8, 0.25, 10),
                    Block.createCuboidShape(8, 0, 9, 9, 0.5, 10),
                    Block.createCuboidShape(4, 0, 7, 5, 1, 8),
                    Block.createCuboidShape(6, 0, 9, 7, 1, 10),
                    Block.createCuboidShape(5, 0, 8, 6, 0.5, 9),
                    Block.createCuboidShape(5, 0, 9, 6, 0.25, 10),
                    Block.createCuboidShape(7, 0, 5, 8, 0.5, 6),
                    Block.createCuboidShape(11, 0, 7, 12, 1, 8),
                    Block.createCuboidShape(6, 0, 6, 7, 0.5, 7),
                    Block.createCuboidShape(10, 0, 6, 11, 1, 7),
                    Block.createCuboidShape(10, 0, 9, 11, 0.5, 10),
                    Block.createCuboidShape(7, 0, 10, 8, 0.5, 11),
                    Block.createCuboidShape(6, 0, 10, 7, 0.25, 11),
                    Block.createCuboidShape(6, 0, 5, 7, 0.25, 6),
                    Block.createCuboidShape(5, 0, 6, 6, 0.25, 7),
                    Block.createCuboidShape(5, 0, 7, 6, 0, 8),
                    Block.createCuboidShape(7, 0, 7, 8, 0, 8),
                    Block.createCuboidShape(8, 0, 8, 9, 0, 9),
                    Block.createCuboidShape(8, 0, 5, 9, 0, 6),
                    Block.createCuboidShape(9, 0, 6, 10, 0, 7),
                    Block.createCuboidShape(10, 0, 7, 11, 0, 8)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(0, 0, 7, 2, 1, 9),
                    Block.createCuboidShape(7, 0, 14, 9, 1, 16),
                    Block.createCuboidShape(7, 0, 0, 9, 1, 2),
                    Block.createCuboidShape(14, 0, 7, 16, 1, 9),
                    Block.createCuboidShape(1, 0, 9, 3, 1, 11),
                    Block.createCuboidShape(1, 0, 5, 3, 1, 7),
                    Block.createCuboidShape(5, 0, 13, 7, 1, 15),
                    Block.createCuboidShape(9, 0, 13, 11, 1, 15),
                    Block.createCuboidShape(9, 0, 1, 11, 1, 3),
                    Block.createCuboidShape(5, 0, 1, 7, 1, 3),
                    Block.createCuboidShape(13, 0, 5, 15, 1, 7),
                    Block.createCuboidShape(13, 0, 9, 15, 1, 11),
                    Block.createCuboidShape(11, 0, 11, 13, 1, 13),
                    Block.createCuboidShape(11, 0, 3, 13, 1, 5),
                    Block.createCuboidShape(3, 0, 3, 5, 1, 5),
                    Block.createCuboidShape(3, 0, 11, 5, 1, 13),
                    Block.createCuboidShape(1, 0, 11, 3, 0.5, 13),
                    Block.createCuboidShape(2, 0, 13, 4, 0.5, 15),
                    Block.createCuboidShape(3, 0, 1, 5, 0.5, 3),
                    Block.createCuboidShape(13, 0, 3, 15, 0.5, 5),
                    Block.createCuboidShape(13, 0, 11, 15, 0.5, 13),
                    Block.createCuboidShape(12, 0, 14, 13, 0.5, 15),
                    Block.createCuboidShape(4, 0, 0, 5, 0.25, 1),
                    Block.createCuboidShape(11, 0, 2, 12, 0.5, 3),
                    Block.createCuboidShape(2, 0, 4, 3, 0.25, 5),
                    Block.createCuboidShape(7, 0, 7, 8, 1, 8),
                    Block.createCuboidShape(7, 0, 6, 8, 0.5, 7),
                    Block.createCuboidShape(9, 0, 7, 10, 0.5, 8),
                    Block.createCuboidShape(9, 0, 8, 10, 1, 9),
                    Block.createCuboidShape(8, 0, 8, 9, 0.5, 9),
                    Block.createCuboidShape(7, 0, 9, 8, 1, 10),
                    Block.createCuboidShape(8, 0, 6, 9, 0.25, 7),
                    Block.createCuboidShape(8, 0, 9, 9, 0.25, 10),
                    Block.createCuboidShape(6, 0, 9, 7, 0.25, 10),
                    Block.createCuboidShape(5, 0, 8, 6, 1, 9),
                    Block.createCuboidShape(6, 0, 7, 7, 0.25, 8),
                    Block.createCuboidShape(6, 0, 8, 7, 0.5, 9),
                    Block.createCuboidShape(8, 0, 4, 9, 1, 5),
                    Block.createCuboidShape(6, 0, 6, 7, 1, 7),
                    Block.createCuboidShape(7, 0, 5, 8, 0.5, 6),
                    Block.createCuboidShape(6, 0, 5, 7, 0.25, 6),
                    Block.createCuboidShape(10, 0, 7, 11, 0.5, 8),
                    Block.createCuboidShape(8, 0, 11, 9, 1, 12),
                    Block.createCuboidShape(9, 0, 6, 10, 0.5, 7),
                    Block.createCuboidShape(9, 0, 10, 10, 1, 11),
                    Block.createCuboidShape(6, 0, 10, 7, 0.5, 11),
                    Block.createCuboidShape(5, 0, 7, 6, 0.5, 8),
                    Block.createCuboidShape(5, 0, 6, 6, 0.25, 7),
                    Block.createCuboidShape(10, 0, 6, 11, 0.25, 7),
                    Block.createCuboidShape(9, 0, 5, 10, 0.25, 6),
                    Block.createCuboidShape(8, 0, 5, 9, 0, 6),
                    Block.createCuboidShape(8, 0, 7, 9, 0, 8),
                    Block.createCuboidShape(7, 0, 8, 8, 0, 9),
                    Block.createCuboidShape(10, 0, 8, 11, 0, 9),
                    Block.createCuboidShape(9, 0, 9, 10, 0, 10),
                    Block.createCuboidShape(8, 0, 10, 9, 0, 11)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get());

    public static final VoxelShapeGroup WOOD_TABLE = new VoxelShapeGroup(
            Stream.of(
                    Block.createCuboidShape(1, 0, 1, 3, 14, 3),
                    Block.createCuboidShape(0, 13, 0, 16, 15, 16),
                    Block.createCuboidShape(13, 0, 1, 15, 14, 3),
                    Block.createCuboidShape(1, 0, 13, 3, 14, 15),
                    Block.createCuboidShape(13, 0, 13, 15, 14, 15)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(13, 0, 1, 15, 14, 3),
                    Block.createCuboidShape(0, 13, 0, 16, 15, 16),
                    Block.createCuboidShape(13, 0, 13, 15, 14, 15),
                    Block.createCuboidShape(1, 0, 1, 3, 14, 3),
                    Block.createCuboidShape(1, 0, 13, 3, 14, 15)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(13, 0, 13, 15, 14, 15),
                    Block.createCuboidShape(0, 13, 0, 16, 15, 16),
                    Block.createCuboidShape(1, 0, 13, 3, 14, 15),
                    Block.createCuboidShape(13, 0, 1, 15, 14, 3),
                    Block.createCuboidShape(1, 0, 1, 3, 14, 3)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(1, 0, 13, 3, 14, 15),
                    Block.createCuboidShape(0, 13, 0, 16, 15, 16),
                    Block.createCuboidShape(1, 0, 1, 3, 14, 3),
                    Block.createCuboidShape(13, 0, 13, 15, 14, 15),
                    Block.createCuboidShape(13, 0, 1, 15, 14, 3)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get());

    public static final VoxelShapeGroup WOODEN_CHAIR_1 = new VoxelShapeGroup(
            Stream.of(
                    Block.createCuboidShape(6, 8, 15, 10, 10, 16),
                    Block.createCuboidShape(10, 8, 14, 12, 10, 15),
                    Block.createCuboidShape(12, 8, 13, 13, 10, 14),
                    Block.createCuboidShape(13, 8, 12, 14, 10, 13),
                    Block.createCuboidShape(14, 8, 10, 15, 10, 12),
                    Block.createCuboidShape(0, 8, 6, 1, 10, 10),
                    Block.createCuboidShape(6, 8, 0, 10, 10, 1),
                    Block.createCuboidShape(10, 8, 1, 12, 10, 2),
                    Block.createCuboidShape(12, 8, 2, 13, 10, 3),
                    Block.createCuboidShape(13, 8, 3, 14, 10, 4),
                    Block.createCuboidShape(14, 8, 4, 15, 10, 6),
                    Block.createCuboidShape(15, 8, 6, 16, 10, 10),
                    Block.createCuboidShape(4, 8, 14, 6, 10, 15),
                    Block.createCuboidShape(3, 8, 13, 4, 10, 14),
                    Block.createCuboidShape(2, 8, 12, 3, 10, 13),
                    Block.createCuboidShape(1, 8, 10, 2, 10, 12),
                    Block.createCuboidShape(1, 8, 4, 2, 10, 6),
                    Block.createCuboidShape(2, 8, 3, 3, 10, 4),
                    Block.createCuboidShape(3, 8, 2, 4, 10, 3),
                    Block.createCuboidShape(4, 8, 1, 6, 10, 2),
                    Block.createCuboidShape(4, 8, 2, 12, 10, 3),
                    Block.createCuboidShape(3, 8, 3, 13, 10, 4),
                    Block.createCuboidShape(2, 8, 4, 14, 10, 6),
                    Block.createCuboidShape(1, 8, 6, 15, 10, 10),
                    Block.createCuboidShape(6, 8, 1, 10, 10, 2),
                    Block.createCuboidShape(2, 8, 10, 14, 10, 12),
                    Block.createCuboidShape(3, 8, 12, 13, 10, 13),
                    Block.createCuboidShape(4, 8, 13, 12, 10, 14),
                    Block.createCuboidShape(6, 8, 14, 10, 10, 15),
                    Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                    Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                    Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                    Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                    Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                    Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                    Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                    Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                    Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                    Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                    Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                    Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(0, 8, 6, 1, 10, 10),
                    Block.createCuboidShape(1, 8, 10, 2, 10, 12),
                    Block.createCuboidShape(2, 8, 12, 3, 10, 13),
                    Block.createCuboidShape(3, 8, 13, 4, 10, 14),
                    Block.createCuboidShape(4, 8, 14, 6, 10, 15),
                    Block.createCuboidShape(6, 8, 0, 10, 10, 1),
                    Block.createCuboidShape(15, 8, 6, 16, 10, 10),
                    Block.createCuboidShape(14, 8, 10, 15, 10, 12),
                    Block.createCuboidShape(13, 8, 12, 14, 10, 13),
                    Block.createCuboidShape(12, 8, 13, 13, 10, 14),
                    Block.createCuboidShape(10, 8, 14, 12, 10, 15),
                    Block.createCuboidShape(6, 8, 15, 10, 10, 16),
                    Block.createCuboidShape(1, 8, 4, 2, 10, 6),
                    Block.createCuboidShape(2, 8, 3, 3, 10, 4),
                    Block.createCuboidShape(3, 8, 2, 4, 10, 3),
                    Block.createCuboidShape(4, 8, 1, 6, 10, 2),
                    Block.createCuboidShape(10, 8, 1, 12, 10, 2),
                    Block.createCuboidShape(12, 8, 2, 13, 10, 3),
                    Block.createCuboidShape(13, 8, 3, 14, 10, 4),
                    Block.createCuboidShape(14, 8, 4, 15, 10, 6),
                    Block.createCuboidShape(13, 8, 4, 14, 10, 12),
                    Block.createCuboidShape(12, 8, 3, 13, 10, 13),
                    Block.createCuboidShape(10, 8, 2, 12, 10, 14),
                    Block.createCuboidShape(6, 8, 1, 10, 10, 15),
                    Block.createCuboidShape(14, 8, 6, 15, 10, 10),
                    Block.createCuboidShape(4, 8, 2, 6, 10, 14),
                    Block.createCuboidShape(3, 8, 3, 4, 10, 13),
                    Block.createCuboidShape(2, 8, 4, 3, 10, 12),
                    Block.createCuboidShape(1, 8, 6, 2, 10, 10),
                    Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                    Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                    Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                    Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                    Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                    Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                    Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                    Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                    Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                    Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                    Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                    Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(6, 8, 0, 10, 10, 1),
                    Block.createCuboidShape(4, 8, 1, 6, 10, 2),
                    Block.createCuboidShape(3, 8, 2, 4, 10, 3),
                    Block.createCuboidShape(2, 8, 3, 3, 10, 4),
                    Block.createCuboidShape(1, 8, 4, 2, 10, 6),
                    Block.createCuboidShape(15, 8, 6, 16, 10, 10),
                    Block.createCuboidShape(6, 8, 15, 10, 10, 16),
                    Block.createCuboidShape(4, 8, 14, 6, 10, 15),
                    Block.createCuboidShape(3, 8, 13, 4, 10, 14),
                    Block.createCuboidShape(2, 8, 12, 3, 10, 13),
                    Block.createCuboidShape(1, 8, 10, 2, 10, 12),
                    Block.createCuboidShape(0, 8, 6, 1, 10, 10),
                    Block.createCuboidShape(10, 8, 1, 12, 10, 2),
                    Block.createCuboidShape(12, 8, 2, 13, 10, 3),
                    Block.createCuboidShape(13, 8, 3, 14, 10, 4),
                    Block.createCuboidShape(14, 8, 4, 15, 10, 6),
                    Block.createCuboidShape(14, 8, 10, 15, 10, 12),
                    Block.createCuboidShape(13, 8, 12, 14, 10, 13),
                    Block.createCuboidShape(12, 8, 13, 13, 10, 14),
                    Block.createCuboidShape(10, 8, 14, 12, 10, 15),
                    Block.createCuboidShape(4, 8, 13, 12, 10, 14),
                    Block.createCuboidShape(3, 8, 12, 13, 10, 13),
                    Block.createCuboidShape(2, 8, 10, 14, 10, 12),
                    Block.createCuboidShape(1, 8, 6, 15, 10, 10),
                    Block.createCuboidShape(6, 8, 14, 10, 10, 15),
                    Block.createCuboidShape(2, 8, 4, 14, 10, 6),
                    Block.createCuboidShape(3, 8, 3, 13, 10, 4),
                    Block.createCuboidShape(4, 8, 2, 12, 10, 3),
                    Block.createCuboidShape(6, 8, 1, 10, 10, 2),
                    Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                    Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                    Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                    Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                    Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                    Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                    Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                    Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                    Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                    Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                    Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                    Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(15, 8, 6, 16, 10, 10),
                    Block.createCuboidShape(14, 8, 4, 15, 10, 6),
                    Block.createCuboidShape(13, 8, 3, 14, 10, 4),
                    Block.createCuboidShape(12, 8, 2, 13, 10, 3),
                    Block.createCuboidShape(10, 8, 1, 12, 10, 2),
                    Block.createCuboidShape(6, 8, 15, 10, 10, 16),
                    Block.createCuboidShape(0, 8, 6, 1, 10, 10),
                    Block.createCuboidShape(1, 8, 4, 2, 10, 6),
                    Block.createCuboidShape(2, 8, 3, 3, 10, 4),
                    Block.createCuboidShape(3, 8, 2, 4, 10, 3),
                    Block.createCuboidShape(4, 8, 1, 6, 10, 2),
                    Block.createCuboidShape(6, 8, 0, 10, 10, 1),
                    Block.createCuboidShape(14, 8, 10, 15, 10, 12),
                    Block.createCuboidShape(13, 8, 12, 14, 10, 13),
                    Block.createCuboidShape(12, 8, 13, 13, 10, 14),
                    Block.createCuboidShape(10, 8, 14, 12, 10, 15),
                    Block.createCuboidShape(4, 8, 14, 6, 10, 15),
                    Block.createCuboidShape(3, 8, 13, 4, 10, 14),
                    Block.createCuboidShape(2, 8, 12, 3, 10, 13),
                    Block.createCuboidShape(1, 8, 10, 2, 10, 12),
                    Block.createCuboidShape(2, 8, 4, 3, 10, 12),
                    Block.createCuboidShape(3, 8, 3, 4, 10, 13),
                    Block.createCuboidShape(4, 8, 2, 6, 10, 14),
                    Block.createCuboidShape(6, 8, 1, 10, 10, 15),
                    Block.createCuboidShape(1, 8, 6, 2, 10, 10),
                    Block.createCuboidShape(10, 8, 2, 12, 10, 14),
                    Block.createCuboidShape(12, 8, 3, 13, 10, 13),
                    Block.createCuboidShape(13, 8, 4, 14, 10, 12),
                    Block.createCuboidShape(14, 8, 6, 15, 10, 10),
                    Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                    Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                    Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                    Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                    Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                    Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                    Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                    Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                    Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                    Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                    Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                    Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get());

    public static final VoxelShapeGroup WOODEN_CHAIR_2 = new VoxelShapeGroup(
            Stream.of(
                    Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                    Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                    Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                    Block.createCuboidShape(2, 8, 2, 14, 10, 14),
                    Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                    Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                    Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                    Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                    Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                    Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                    Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                    Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                    Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                    Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                    Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                    Block.createCuboidShape(2, 8, 2, 14, 10, 14),
                    Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                    Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                    Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                    Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                    Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                    Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                    Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                    Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                    Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                    Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                    Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                    Block.createCuboidShape(2, 8, 2, 14, 10, 14),
                    Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                    Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                    Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                    Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                    Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                    Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                    Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                    Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                    Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                    Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                    Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                    Block.createCuboidShape(2, 8, 2, 14, 10, 14),
                    Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                    Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                    Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                    Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                    Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                    Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                    Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                    Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                    Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get());

    public static final VoxelShapeGroup WOODEN_CHAIR_3 = new VoxelShapeGroup(
            Stream.of(
                    Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                    Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                    Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                    Block.createCuboidShape(2, 8, 2, 14, 10, 14),
                    Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                    Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                    Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                    Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                    Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                    Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                    Block.createCuboidShape(11.25, 10, 11.25, 12.75, 20, 12.75),
                    Block.createCuboidShape(4.75, 17, 11.5, 11.25, 19, 12.5),
                    Block.createCuboidShape(4.75, 12, 11.5, 11.25, 14, 12.5),
                    Block.createCuboidShape(3.25, 10, 11.25, 4.75, 20, 12.75),
                    Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                    Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                    Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                    Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                    Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                    Block.createCuboidShape(2, 8, 2, 14, 10, 14),
                    Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                    Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                    Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                    Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                    Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                    Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                    Block.createCuboidShape(3.25, 10, 11.25, 4.75, 20, 12.75),
                    Block.createCuboidShape(3.5, 17, 4.75, 4.5, 19, 11.25),
                    Block.createCuboidShape(3.5, 12, 4.75, 4.5, 14, 11.25),
                    Block.createCuboidShape(3.25, 10, 3.25, 4.75, 20, 4.75),
                    Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                    Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                    Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                    Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                    Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                    Block.createCuboidShape(2, 8, 2, 14, 10, 14),
                    Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                    Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                    Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                    Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                    Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                    Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                    Block.createCuboidShape(3.25, 10, 3.25, 4.75, 20, 4.75),
                    Block.createCuboidShape(4.75, 17, 3.5, 11.25, 19, 4.5),
                    Block.createCuboidShape(4.75, 12, 3.5, 11.25, 14, 4.5),
                    Block.createCuboidShape(11.25, 10, 3.25, 12.75, 20, 4.75),
                    Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                    Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                    Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get(),
            Stream.of(
                    Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                    Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                    Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                    Block.createCuboidShape(2, 8, 2, 14, 10, 14),
                    Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                    Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                    Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                    Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                    Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                    Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                    Block.createCuboidShape(11.25, 10, 3.25, 12.75, 20, 4.75),
                    Block.createCuboidShape(11.5, 17, 4.75, 12.5, 19, 11.25),
                    Block.createCuboidShape(11.5, 12, 4.75, 12.5, 14, 11.25),
                    Block.createCuboidShape(11.25, 10, 11.25, 12.75, 20, 12.75),
                    Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                    Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                    Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5)
            ).reduce((v1, v2) -> {
                return VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR);
            }).get());

    public static class DwarfForge {

        public static final VoxelShapeGroup DWARF_FORGE_PIT_SHAPES = new VoxelShapeGroup(Stream.of(
                Block.createCuboidShape(13, 9, 1, 15, 10, 3),
                Block.createCuboidShape(10, 9, 1, 12, 10, 3),
                Block.createCuboidShape(12, 9, 2, 13, 9.5, 3),
                Block.createCuboidShape(12, 9, 5, 13, 9.5, 6),
                Block.createCuboidShape(12, 9, 6, 14, 10, 8),
                Block.createCuboidShape(12, 9, 9, 13, 9.5, 10),
                Block.createCuboidShape(12, 9, 10, 14, 10, 12),
                Block.createCuboidShape(11, 9, 12, 13, 10, 14),
                Block.createCuboidShape(12, 9, 14, 13, 9.5, 15),
                Block.createCuboidShape(9, 9, 11, 11, 10, 13),
                Block.createCuboidShape(6, 9, 13, 8, 10, 15),
                Block.createCuboidShape(8, 9, 14, 9, 9.5, 15),
                Block.createCuboidShape(6, 9, 10, 8, 10, 12),
                Block.createCuboidShape(4, 9, 11, 6, 10, 13),
                Block.createCuboidShape(5, 9, 13, 6, 9.5, 14),
                Block.createCuboidShape(3, 9, 14, 4, 9.5, 15),
                Block.createCuboidShape(2, 9, 12, 4, 10, 14),
                Block.createCuboidShape(3, 9, 11, 4, 9.5, 12),
                Block.createCuboidShape(2, 9, 9, 4, 10, 11),
                Block.createCuboidShape(4, 9, 8, 6, 10, 10),
                Block.createCuboidShape(6, 9, 8, 7, 9.5, 9),
                Block.createCuboidShape(5, 9, 7, 6, 9.5, 8),
                Block.createCuboidShape(6, 9, 6, 8, 10, 8),
                Block.createCuboidShape(8, 9, 7, 9, 9.5, 8),
                Block.createCuboidShape(8, 9, 8, 10, 10, 10),
                Block.createCuboidShape(8, 9, 10, 9, 9.5, 11),
                Block.createCuboidShape(10, 9, 5, 11, 9.5, 6),
                Block.createCuboidShape(9, 9, 6, 11, 10, 8),
                Block.createCuboidShape(9, 9, 3, 11, 10, 5),
                Block.createCuboidShape(8, 9, 4, 9, 9.5, 5),
                Block.createCuboidShape(7, 9, 2, 9, 10, 4),
                Block.createCuboidShape(7, 9, 1, 8, 9.5, 2),
                Block.createCuboidShape(6, 9, 3, 7, 9.5, 4),
                Block.createCuboidShape(5, 9, 1, 7, 10, 3),
                Block.createCuboidShape(4, 9, 2, 5, 9.5, 3),
                Block.createCuboidShape(2, 9, 1, 4, 10, 3),
                Block.createCuboidShape(3, 9, 3, 4, 9.5, 4),
                Block.createCuboidShape(3, 9, 5, 4, 9.5, 6),
                Block.createCuboidShape(4, 9, 4, 6, 10, 6),
                Block.createCuboidShape(2, 9, 6, 4, 10, 8),
                Block.createCuboidShape(3, 9, 8, 4, 9.5, 9),
                Block.createCuboidShape(10, 9, 8, 12, 10, 10),
                Block.createCuboidShape(0, 0, 0, 16, 9, 16)
        ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(13, 9, 13, 15, 10, 15),
                        Block.createCuboidShape(13, 9, 10, 15, 10, 12),
                        Block.createCuboidShape(13, 9, 12, 14, 9.5, 13),
                        Block.createCuboidShape(10, 9, 12, 11, 9.5, 13),
                        Block.createCuboidShape(8, 9, 12, 10, 10, 14),
                        Block.createCuboidShape(6, 9, 12, 7, 9.5, 13),
                        Block.createCuboidShape(4, 9, 12, 6, 10, 14),
                        Block.createCuboidShape(2, 9, 11, 4, 10, 13),
                        Block.createCuboidShape(1, 9, 12, 2, 9.5, 13),
                        Block.createCuboidShape(3, 9, 9, 5, 10, 11),
                        Block.createCuboidShape(1, 9, 6, 3, 10, 8),
                        Block.createCuboidShape(1, 9, 8, 2, 9.5, 9),
                        Block.createCuboidShape(4, 9, 6, 6, 10, 8),
                        Block.createCuboidShape(3, 9, 4, 5, 10, 6),
                        Block.createCuboidShape(2, 9, 5, 3, 9.5, 6),
                        Block.createCuboidShape(1, 9, 3, 2, 9.5, 4),
                        Block.createCuboidShape(2, 9, 2, 4, 10, 4),
                        Block.createCuboidShape(4, 9, 3, 5, 9.5, 4),
                        Block.createCuboidShape(5, 9, 2, 7, 10, 4),
                        Block.createCuboidShape(6, 9, 4, 8, 10, 6),
                        Block.createCuboidShape(7, 9, 6, 8, 9.5, 7),
                        Block.createCuboidShape(8, 9, 5, 9, 9.5, 6),
                        Block.createCuboidShape(8, 9, 6, 10, 10, 8),
                        Block.createCuboidShape(8, 9, 8, 9, 9.5, 9),
                        Block.createCuboidShape(6, 9, 8, 8, 10, 10),
                        Block.createCuboidShape(5, 9, 8, 6, 9.5, 9),
                        Block.createCuboidShape(10, 9, 10, 11, 9.5, 11),
                        Block.createCuboidShape(8, 9, 9, 10, 10, 11),
                        Block.createCuboidShape(11, 9, 9, 13, 10, 11),
                        Block.createCuboidShape(11, 9, 8, 12, 9.5, 9),
                        Block.createCuboidShape(12, 9, 7, 14, 10, 9),
                        Block.createCuboidShape(14, 9, 7, 15, 9.5, 8),
                        Block.createCuboidShape(12, 9, 6, 13, 9.5, 7),
                        Block.createCuboidShape(13, 9, 5, 15, 10, 7),
                        Block.createCuboidShape(13, 9, 4, 14, 9.5, 5),
                        Block.createCuboidShape(13, 9, 2, 15, 10, 4),
                        Block.createCuboidShape(12, 9, 3, 13, 9.5, 4),
                        Block.createCuboidShape(10, 9, 3, 11, 9.5, 4),
                        Block.createCuboidShape(10, 9, 4, 12, 10, 6),
                        Block.createCuboidShape(8, 9, 2, 10, 10, 4),
                        Block.createCuboidShape(7, 9, 3, 8, 9.5, 4),
                        Block.createCuboidShape(6, 9, 10, 8, 10, 12),
                        Block.createCuboidShape(0, 0, 0, 16, 9, 16)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(1, 9, 13, 3, 10, 15),
                        Block.createCuboidShape(4, 9, 13, 6, 10, 15),
                        Block.createCuboidShape(3, 9, 13, 4, 9.5, 14),
                        Block.createCuboidShape(3, 9, 10, 4, 9.5, 11),
                        Block.createCuboidShape(2, 9, 8, 4, 10, 10),
                        Block.createCuboidShape(3, 9, 6, 4, 9.5, 7),
                        Block.createCuboidShape(2, 9, 4, 4, 10, 6),
                        Block.createCuboidShape(3, 9, 2, 5, 10, 4),
                        Block.createCuboidShape(3, 9, 1, 4, 9.5, 2),
                        Block.createCuboidShape(5, 9, 3, 7, 10, 5),
                        Block.createCuboidShape(8, 9, 1, 10, 10, 3),
                        Block.createCuboidShape(7, 9, 1, 8, 9.5, 2),
                        Block.createCuboidShape(8, 9, 4, 10, 10, 6),
                        Block.createCuboidShape(10, 9, 3, 12, 10, 5),
                        Block.createCuboidShape(10, 9, 2, 11, 9.5, 3),
                        Block.createCuboidShape(12, 9, 1, 13, 9.5, 2),
                        Block.createCuboidShape(12, 9, 2, 14, 10, 4),
                        Block.createCuboidShape(12, 9, 4, 13, 9.5, 5),
                        Block.createCuboidShape(12, 9, 5, 14, 10, 7),
                        Block.createCuboidShape(10, 9, 6, 12, 10, 8),
                        Block.createCuboidShape(9, 9, 7, 10, 9.5, 8),
                        Block.createCuboidShape(10, 9, 8, 11, 9.5, 9),
                        Block.createCuboidShape(8, 9, 8, 10, 10, 10),
                        Block.createCuboidShape(7, 9, 8, 8, 9.5, 9),
                        Block.createCuboidShape(6, 9, 6, 8, 10, 8),
                        Block.createCuboidShape(7, 9, 5, 8, 9.5, 6),
                        Block.createCuboidShape(5, 9, 10, 6, 9.5, 11),
                        Block.createCuboidShape(5, 9, 8, 7, 10, 10),
                        Block.createCuboidShape(5, 9, 11, 7, 10, 13),
                        Block.createCuboidShape(7, 9, 11, 8, 9.5, 12),
                        Block.createCuboidShape(7, 9, 12, 9, 10, 14),
                        Block.createCuboidShape(8, 9, 14, 9, 9.5, 15),
                        Block.createCuboidShape(9, 9, 12, 10, 9.5, 13),
                        Block.createCuboidShape(9, 9, 13, 11, 10, 15),
                        Block.createCuboidShape(11, 9, 13, 12, 9.5, 14),
                        Block.createCuboidShape(12, 9, 13, 14, 10, 15),
                        Block.createCuboidShape(12, 9, 12, 13, 9.5, 13),
                        Block.createCuboidShape(12, 9, 10, 13, 9.5, 11),
                        Block.createCuboidShape(10, 9, 10, 12, 10, 12),
                        Block.createCuboidShape(12, 9, 8, 14, 10, 10),
                        Block.createCuboidShape(12, 9, 7, 13, 9.5, 8),
                        Block.createCuboidShape(4, 9, 6, 6, 10, 8),
                        Block.createCuboidShape(0, 0, 0, 16, 9, 16)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(1, 9, 1, 3, 10, 3),
                        Block.createCuboidShape(1, 9, 4, 3, 10, 6),
                        Block.createCuboidShape(2, 9, 3, 3, 9.5, 4),
                        Block.createCuboidShape(5, 9, 3, 6, 9.5, 4),
                        Block.createCuboidShape(6, 9, 2, 8, 10, 4),
                        Block.createCuboidShape(9, 9, 3, 10, 9.5, 4),
                        Block.createCuboidShape(10, 9, 2, 12, 10, 4),
                        Block.createCuboidShape(12, 9, 3, 14, 10, 5),
                        Block.createCuboidShape(14, 9, 3, 15, 9.5, 4),
                        Block.createCuboidShape(11, 9, 5, 13, 10, 7),
                        Block.createCuboidShape(13, 9, 8, 15, 10, 10),
                        Block.createCuboidShape(14, 9, 7, 15, 9.5, 8),
                        Block.createCuboidShape(10, 9, 8, 12, 10, 10),
                        Block.createCuboidShape(11, 9, 10, 13, 10, 12),
                        Block.createCuboidShape(13, 9, 10, 14, 9.5, 11),
                        Block.createCuboidShape(14, 9, 12, 15, 9.5, 13),
                        Block.createCuboidShape(12, 9, 12, 14, 10, 14),
                        Block.createCuboidShape(11, 9, 12, 12, 9.5, 13),
                        Block.createCuboidShape(9, 9, 12, 11, 10, 14),
                        Block.createCuboidShape(8, 9, 10, 10, 10, 12),
                        Block.createCuboidShape(8, 9, 9, 9, 9.5, 10),
                        Block.createCuboidShape(7, 9, 10, 8, 9.5, 11),
                        Block.createCuboidShape(6, 9, 8, 8, 10, 10),
                        Block.createCuboidShape(7, 9, 7, 8, 9.5, 8),
                        Block.createCuboidShape(8, 9, 6, 10, 10, 8),
                        Block.createCuboidShape(10, 9, 7, 11, 9.5, 8),
                        Block.createCuboidShape(5, 9, 5, 6, 9.5, 6),
                        Block.createCuboidShape(6, 9, 5, 8, 10, 7),
                        Block.createCuboidShape(3, 9, 5, 5, 10, 7),
                        Block.createCuboidShape(4, 9, 7, 5, 9.5, 8),
                        Block.createCuboidShape(2, 9, 7, 4, 10, 9),
                        Block.createCuboidShape(1, 9, 8, 2, 9.5, 9),
                        Block.createCuboidShape(3, 9, 9, 4, 9.5, 10),
                        Block.createCuboidShape(1, 9, 9, 3, 10, 11),
                        Block.createCuboidShape(2, 9, 11, 3, 9.5, 12),
                        Block.createCuboidShape(1, 9, 12, 3, 10, 14),
                        Block.createCuboidShape(3, 9, 12, 4, 9.5, 13),
                        Block.createCuboidShape(5, 9, 12, 6, 9.5, 13),
                        Block.createCuboidShape(4, 9, 10, 6, 10, 12),
                        Block.createCuboidShape(6, 9, 12, 8, 10, 14),
                        Block.createCuboidShape(8, 9, 12, 9, 9.5, 13),
                        Block.createCuboidShape(8, 9, 4, 10, 10, 6),
                        Block.createCuboidShape(0, 0, 0, 16, 9, 16)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get());

        public static final VoxelShapeGroup DWARF_FORGE_WALL_BOTTOM_SHAPES = new VoxelShapeGroup(
                Stream.of(
                        Block.createCuboidShape(0, 0, 0, 16, 14, 10),
                        Block.createCuboidShape(0, 0, 10, 16, 13, 16),
                        Block.createCuboidShape(0, 14, 3, 4, 16, 10),
                        Block.createCuboidShape(12, 14, 3, 16, 16, 10)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(6, 0, 0, 16, 14, 16),
                        Block.createCuboidShape(0, 0, 0, 6, 13, 16),
                        Block.createCuboidShape(6, 14, 0, 13, 16, 4),
                        Block.createCuboidShape(6, 14, 12, 13, 16, 16)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(0, 0, 6, 16, 14, 16),
                        Block.createCuboidShape(0, 0, 0, 16, 13, 6),
                        Block.createCuboidShape(12, 14, 6, 16, 16, 13),
                        Block.createCuboidShape(0, 14, 6, 4, 16, 13)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(0, 0, 0, 10, 14, 16),
                        Block.createCuboidShape(10, 0, 0, 16, 13, 16),
                        Block.createCuboidShape(3, 14, 12, 10, 16, 16),
                        Block.createCuboidShape(3, 14, 0, 10, 16, 4)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get()
        );

        public static final VoxelShapeGroup DWARF_FORGE_WALL_TOP_SHAPES = new VoxelShapeGroup(
                Stream.of(
                        Block.createCuboidShape(12, 0, 3, 16, 8, 10),
                        Block.createCuboidShape(0, 0, 3, 4, 8, 10),
                        Block.createCuboidShape(4, 16, 0, 12, 19, 10),
                        Block.createCuboidShape(0, 8, 0, 16, 16, 12)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(6, 0, 12, 13, 8, 16),
                        Block.createCuboidShape(6, 0, 0, 13, 8, 4),
                        Block.createCuboidShape(6, 16, 4, 16, 19, 12),
                        Block.createCuboidShape(4, 8, 0, 16, 16, 16)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(0, 0, 6, 4, 8, 13),
                        Block.createCuboidShape(12, 0, 6, 16, 8, 13),
                        Block.createCuboidShape(4, 16, 6, 12, 19, 16),
                        Block.createCuboidShape(0, 8, 4, 16, 16, 16)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(3, 0, 0, 10, 8, 4),
                        Block.createCuboidShape(3, 0, 12, 10, 8, 16),
                        Block.createCuboidShape(0, 16, 4, 10, 19, 12),
                        Block.createCuboidShape(0, 8, 0, 12, 16, 16)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get()
        );

        public static final VoxelShapeGroup DWARF_FORGE_CHIMNEY_TOP_SHAPES = new VoxelShapeGroup(
                Stream.of(
                        Block.createCuboidShape(0, 0, 0, 16, 8, 4),
                        Block.createCuboidShape(2, 0, 4, 14, 6, 6),
                        Block.createCuboidShape(0, 8, 0, 16, 12, 6)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(12, 0, 0, 16, 8, 16),
                        Block.createCuboidShape(10, 0, 2, 12, 6, 14),
                        Block.createCuboidShape(10, 8, 0, 16, 12, 16)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(0, 0, 12, 16, 8, 16),
                        Block.createCuboidShape(2, 0, 10, 14, 6, 12),
                        Block.createCuboidShape(0, 8, 10, 16, 12, 16)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(0, 0, 0, 4, 8, 16),
                        Block.createCuboidShape(4, 0, 2, 6, 6, 14),
                        Block.createCuboidShape(0, 8, 0, 6, 12, 16)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get()
        );

        public static final VoxelShapeGroup DWARF_FORGE_CHIMNEY_BOTTOM_SHAPE = new VoxelShapeGroup(
                VoxelShapes.combineAndSimplify(Block.createCuboidShape(0, 0, 0, 16, 16, 4), Block.createCuboidShape(2, 0, 4, 14, 16, 6), BooleanBiFunction.OR),
                VoxelShapes.combineAndSimplify(Block.createCuboidShape(12, 0, 0, 16, 16, 16), Block.createCuboidShape(10, 0, 2, 12, 16, 14), BooleanBiFunction.OR),
                VoxelShapes.combineAndSimplify(Block.createCuboidShape(0, 0, 12, 16, 16, 16), Block.createCuboidShape(2, 0, 10, 14, 16, 12), BooleanBiFunction.OR),
                VoxelShapes.combineAndSimplify(Block.createCuboidShape(0, 0, 0, 4, 16, 16), Block.createCuboidShape(4, 0, 2, 6, 16, 14), BooleanBiFunction.OR)

        );

        public static final VoxelShapeGroup DWARF_FORGE_PILLAR_BOTTOM_SHAPE = new VoxelShapeGroup(
                VoxelShapes.combineAndSimplify(Block.createCuboidShape(10, 6, 10, 16, 16, 16), Block.createCuboidShape(8, 0, 8, 16, 6, 16), BooleanBiFunction.OR),
                VoxelShapes.combineAndSimplify(Block.createCuboidShape(0, 6, 10, 6, 16, 16), Block.createCuboidShape(0, 0, 8, 8, 6, 16), BooleanBiFunction.OR),
                VoxelShapes.combineAndSimplify(Block.createCuboidShape(0, 6, 0, 6, 16, 6), Block.createCuboidShape(0, 0, 0, 8, 6, 8), BooleanBiFunction.OR),
                VoxelShapes.combineAndSimplify(Block.createCuboidShape(10, 6, 0, 16, 16, 6), Block.createCuboidShape(8, 0, 0, 16, 6, 8), BooleanBiFunction.OR)
        );

        public static final VoxelShapeGroup DWARF_FORGE_PILLAR_TOP_SHAPE = new VoxelShapeGroup(
                VoxelShapes.combineAndSimplify(Block.createCuboidShape(10, 0, 10, 16, 10, 16), Block.createCuboidShape(8, 10, 8, 16, 16, 16), BooleanBiFunction.OR),
                VoxelShapes.combineAndSimplify(Block.createCuboidShape(0, 0, 10, 6, 10, 16), Block.createCuboidShape(0, 10, 8, 8, 16, 16), BooleanBiFunction.OR),
                VoxelShapes.combineAndSimplify(Block.createCuboidShape(0, 0, 0, 6, 10, 6), Block.createCuboidShape(0, 10, 0, 8, 16, 8), BooleanBiFunction.OR),
                VoxelShapes.combineAndSimplify(Block.createCuboidShape(10, 0, 0, 16, 10, 6), Block.createCuboidShape(8, 10, 0, 16, 16, 8), BooleanBiFunction.OR)
        );

    }

    public static final class Chairs {

        public static final VoxelShapeGroup CHAIR_1 = new VoxelShapeGroup(
                Stream.of(
                        Block.createCuboidShape(6, 8, 15, 10, 10, 16),
                        Block.createCuboidShape(10, 8, 14, 12, 10, 15),
                        Block.createCuboidShape(12, 8, 13, 13, 10, 14),
                        Block.createCuboidShape(13, 8, 12, 14, 10, 13),
                        Block.createCuboidShape(14, 8, 10, 15, 10, 12),
                        Block.createCuboidShape(0, 8, 6, 1, 10, 10),
                        Block.createCuboidShape(6, 8, 0, 10, 10, 1),
                        Block.createCuboidShape(10, 8, 1, 12, 10, 2),
                        Block.createCuboidShape(12, 8, 2, 13, 10, 3),
                        Block.createCuboidShape(13, 8, 3, 14, 10, 4),
                        Block.createCuboidShape(14, 8, 4, 15, 10, 6),
                        Block.createCuboidShape(15, 8, 6, 16, 10, 10),
                        Block.createCuboidShape(4, 8, 14, 6, 10, 15),
                        Block.createCuboidShape(3, 8, 13, 4, 10, 14),
                        Block.createCuboidShape(2, 8, 12, 3, 10, 13),
                        Block.createCuboidShape(1, 8, 10, 2, 10, 12),
                        Block.createCuboidShape(1, 8, 4, 2, 10, 6),
                        Block.createCuboidShape(2, 8, 3, 3, 10, 4),
                        Block.createCuboidShape(3, 8, 2, 4, 10, 3),
                        Block.createCuboidShape(4, 8, 1, 6, 10, 2),
                        Block.createCuboidShape(4, 8, 2, 12, 10, 3),
                        Block.createCuboidShape(3, 8, 3, 13, 10, 4),
                        Block.createCuboidShape(2, 8, 4, 14, 10, 6),
                        Block.createCuboidShape(1, 8, 6, 15, 10, 10),
                        Block.createCuboidShape(6, 8, 1, 10, 10, 2),
                        Block.createCuboidShape(2, 8, 10, 14, 10, 12),
                        Block.createCuboidShape(3, 8, 12, 13, 10, 13),
                        Block.createCuboidShape(4, 8, 13, 12, 10, 14),
                        Block.createCuboidShape(6, 8, 14, 10, 10, 15),
                        Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                        Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                        Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                        Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                        Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                        Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                        Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                        Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                        Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                        Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                        Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                        Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(0, 8, 6, 1, 10, 10),
                        Block.createCuboidShape(1, 8, 10, 2, 10, 12),
                        Block.createCuboidShape(2, 8, 12, 3, 10, 13),
                        Block.createCuboidShape(3, 8, 13, 4, 10, 14),
                        Block.createCuboidShape(4, 8, 14, 6, 10, 15),
                        Block.createCuboidShape(6, 8, 0, 10, 10, 1),
                        Block.createCuboidShape(15, 8, 6, 16, 10, 10),
                        Block.createCuboidShape(14, 8, 10, 15, 10, 12),
                        Block.createCuboidShape(13, 8, 12, 14, 10, 13),
                        Block.createCuboidShape(12, 8, 13, 13, 10, 14),
                        Block.createCuboidShape(10, 8, 14, 12, 10, 15),
                        Block.createCuboidShape(6, 8, 15, 10, 10, 16),
                        Block.createCuboidShape(1, 8, 4, 2, 10, 6),
                        Block.createCuboidShape(2, 8, 3, 3, 10, 4),
                        Block.createCuboidShape(3, 8, 2, 4, 10, 3),
                        Block.createCuboidShape(4, 8, 1, 6, 10, 2),
                        Block.createCuboidShape(10, 8, 1, 12, 10, 2),
                        Block.createCuboidShape(12, 8, 2, 13, 10, 3),
                        Block.createCuboidShape(13, 8, 3, 14, 10, 4),
                        Block.createCuboidShape(14, 8, 4, 15, 10, 6),
                        Block.createCuboidShape(13, 8, 4, 14, 10, 12),
                        Block.createCuboidShape(12, 8, 3, 13, 10, 13),
                        Block.createCuboidShape(10, 8, 2, 12, 10, 14),
                        Block.createCuboidShape(6, 8, 1, 10, 10, 15),
                        Block.createCuboidShape(14, 8, 6, 15, 10, 10),
                        Block.createCuboidShape(4, 8, 2, 6, 10, 14),
                        Block.createCuboidShape(3, 8, 3, 4, 10, 13),
                        Block.createCuboidShape(2, 8, 4, 3, 10, 12),
                        Block.createCuboidShape(1, 8, 6, 2, 10, 10),
                        Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                        Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                        Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                        Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                        Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                        Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                        Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                        Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                        Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                        Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                        Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                        Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(6, 8, 0, 10, 10, 1),
                        Block.createCuboidShape(4, 8, 1, 6, 10, 2),
                        Block.createCuboidShape(3, 8, 2, 4, 10, 3),
                        Block.createCuboidShape(2, 8, 3, 3, 10, 4),
                        Block.createCuboidShape(1, 8, 4, 2, 10, 6),
                        Block.createCuboidShape(15, 8, 6, 16, 10, 10),
                        Block.createCuboidShape(6, 8, 15, 10, 10, 16),
                        Block.createCuboidShape(4, 8, 14, 6, 10, 15),
                        Block.createCuboidShape(3, 8, 13, 4, 10, 14),
                        Block.createCuboidShape(2, 8, 12, 3, 10, 13),
                        Block.createCuboidShape(1, 8, 10, 2, 10, 12),
                        Block.createCuboidShape(0, 8, 6, 1, 10, 10),
                        Block.createCuboidShape(10, 8, 1, 12, 10, 2),
                        Block.createCuboidShape(12, 8, 2, 13, 10, 3),
                        Block.createCuboidShape(13, 8, 3, 14, 10, 4),
                        Block.createCuboidShape(14, 8, 4, 15, 10, 6),
                        Block.createCuboidShape(14, 8, 10, 15, 10, 12),
                        Block.createCuboidShape(13, 8, 12, 14, 10, 13),
                        Block.createCuboidShape(12, 8, 13, 13, 10, 14),
                        Block.createCuboidShape(10, 8, 14, 12, 10, 15),
                        Block.createCuboidShape(4, 8, 13, 12, 10, 14),
                        Block.createCuboidShape(3, 8, 12, 13, 10, 13),
                        Block.createCuboidShape(2, 8, 10, 14, 10, 12),
                        Block.createCuboidShape(1, 8, 6, 15, 10, 10),
                        Block.createCuboidShape(6, 8, 14, 10, 10, 15),
                        Block.createCuboidShape(2, 8, 4, 14, 10, 6),
                        Block.createCuboidShape(3, 8, 3, 13, 10, 4),
                        Block.createCuboidShape(4, 8, 2, 12, 10, 3),
                        Block.createCuboidShape(6, 8, 1, 10, 10, 2),
                        Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                        Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                        Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                        Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                        Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                        Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                        Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                        Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                        Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                        Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                        Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                        Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(15, 8, 6, 16, 10, 10),
                        Block.createCuboidShape(14, 8, 4, 15, 10, 6),
                        Block.createCuboidShape(13, 8, 3, 14, 10, 4),
                        Block.createCuboidShape(12, 8, 2, 13, 10, 3),
                        Block.createCuboidShape(10, 8, 1, 12, 10, 2),
                        Block.createCuboidShape(6, 8, 15, 10, 10, 16),
                        Block.createCuboidShape(0, 8, 6, 1, 10, 10),
                        Block.createCuboidShape(1, 8, 4, 2, 10, 6),
                        Block.createCuboidShape(2, 8, 3, 3, 10, 4),
                        Block.createCuboidShape(3, 8, 2, 4, 10, 3),
                        Block.createCuboidShape(4, 8, 1, 6, 10, 2),
                        Block.createCuboidShape(6, 8, 0, 10, 10, 1),
                        Block.createCuboidShape(14, 8, 10, 15, 10, 12),
                        Block.createCuboidShape(13, 8, 12, 14, 10, 13),
                        Block.createCuboidShape(12, 8, 13, 13, 10, 14),
                        Block.createCuboidShape(10, 8, 14, 12, 10, 15),
                        Block.createCuboidShape(4, 8, 14, 6, 10, 15),
                        Block.createCuboidShape(3, 8, 13, 4, 10, 14),
                        Block.createCuboidShape(2, 8, 12, 3, 10, 13),
                        Block.createCuboidShape(1, 8, 10, 2, 10, 12),
                        Block.createCuboidShape(2, 8, 4, 3, 10, 12),
                        Block.createCuboidShape(3, 8, 3, 4, 10, 13),
                        Block.createCuboidShape(4, 8, 2, 6, 10, 14),
                        Block.createCuboidShape(6, 8, 1, 10, 10, 15),
                        Block.createCuboidShape(1, 8, 6, 2, 10, 10),
                        Block.createCuboidShape(10, 8, 2, 12, 10, 14),
                        Block.createCuboidShape(12, 8, 3, 13, 10, 13),
                        Block.createCuboidShape(13, 8, 4, 14, 10, 12),
                        Block.createCuboidShape(14, 8, 6, 15, 10, 10),
                        Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                        Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                        Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                        Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                        Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                        Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                        Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                        Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                        Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                        Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                        Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                        Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get());

        public static final VoxelShapeGroup CHAIR_2 = new VoxelShapeGroup(
                Stream.of(
                        Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                        Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                        Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                        Block.createCuboidShape(2, 8, 2, 14, 10, 14),
                        Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                        Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                        Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                        Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                        Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                        Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                        Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                        Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                        Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                        Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                        Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                        Block.createCuboidShape(2, 8, 2, 14, 10, 14),
                        Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                        Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                        Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                        Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                        Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                        Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                        Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                        Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                        Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                        Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                        Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                        Block.createCuboidShape(2, 8, 2, 14, 10, 14),
                        Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                        Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                        Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                        Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                        Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                        Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                        Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5),
                        Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                        Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(11, 7, 11, 13, 8, 13),
                        Block.createCuboidShape(11.25, 0, 11.25, 12.75, 7, 12.75),
                        Block.createCuboidShape(3.25, 0, 11.25, 4.75, 7, 12.75),
                        Block.createCuboidShape(2, 8, 2, 14, 10, 14),
                        Block.createCuboidShape(3, 7, 11, 5, 8, 13),
                        Block.createCuboidShape(11, 7, 3, 13, 8, 5),
                        Block.createCuboidShape(11.25, 0, 3.25, 12.75, 7, 4.75),
                        Block.createCuboidShape(3.25, 0, 3.25, 4.75, 7, 4.75),
                        Block.createCuboidShape(3, 7, 3, 5, 8, 5),
                        Block.createCuboidShape(11.5, 4, 4.75, 12.5, 5, 11.25),
                        Block.createCuboidShape(3.5, 4, 4.75, 4.5, 5, 11.25),
                        Block.createCuboidShape(4.75, 4, 3.5, 11.25, 5, 4.5),
                        Block.createCuboidShape(4.75, 4, 11.5, 11.25, 5, 12.5)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get()
        );
        
        public static final VoxelShapeGroup CHAIR_3 = new VoxelShapeGroup(
                Stream.of(
                        Block.createCuboidShape(2, 7, 12, 4, 8, 14),
                        Block.createCuboidShape(2.25, 0, 12.25, 3.75, 7, 13.75),
                        Block.createCuboidShape(2.25, 0, 2.25, 3.75, 7, 3.75),
                        Block.createCuboidShape(2, 8, 2, 14, 9, 14),
                        Block.createCuboidShape(2, 7, 2, 4, 8, 4),
                        Block.createCuboidShape(12, 7, 12, 14, 8, 14),
                        Block.createCuboidShape(12.25, 0, 12.25, 13.75, 7, 13.75),
                        Block.createCuboidShape(12.25, 0, 2.25, 13.75, 7, 3.75),
                        Block.createCuboidShape(12, 7, 2, 14, 8, 4),
                        Block.createCuboidShape(12.25, 9, 12.25, 13.75, 20, 13.75),
                        Block.createCuboidShape(3.75, 15, 12.45, 12.25, 19, 13.55),
                        Block.createCuboidShape(3.75, 10, 12.45, 12.25, 11, 13.55),
                        Block.createCuboidShape(3.75, 12, 12.45, 12.25, 13, 13.55),
                        Block.createCuboidShape(2.25, 9, 12.25, 3.75, 20, 13.75),
                        Block.createCuboidShape(2.25, 0.8, 7.5, 13.75, 2.2, 8.5),
                        Block.createCuboidShape(12.5, 1, 3.75, 13.5, 2, 12.25),
                        Block.createCuboidShape(2.5, 1, 3.75, 3.5, 2, 12.25)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(2, 7, 2, 4, 8, 4),
                        Block.createCuboidShape(2.25, 0, 2.25, 3.75, 7, 3.75),
                        Block.createCuboidShape(12.25, 0, 2.25, 13.75, 7, 3.75),
                        Block.createCuboidShape(2, 8, 2, 14, 9, 14),
                        Block.createCuboidShape(12, 7, 2, 14, 8, 4),
                        Block.createCuboidShape(2, 7, 12, 4, 8, 14),
                        Block.createCuboidShape(2.25, 0, 12.25, 3.75, 7, 13.75),
                        Block.createCuboidShape(12.25, 0, 12.25, 13.75, 7, 13.75),
                        Block.createCuboidShape(12, 7, 12, 14, 8, 14),
                        Block.createCuboidShape(2.25, 9, 12.25, 3.75, 20, 13.75),
                        Block.createCuboidShape(2.4499999999999993, 15, 3.75, 3.5500000000000007, 19, 12.25),
                        Block.createCuboidShape(2.4499999999999993, 10, 3.75, 3.5500000000000007, 11, 12.25),
                        Block.createCuboidShape(2.4499999999999993, 12, 3.75, 3.5500000000000007, 13, 12.25),
                        Block.createCuboidShape(2.25, 9, 2.25, 3.75, 20, 3.75),
                        Block.createCuboidShape(7.5, 0.8, 2.25, 8.5, 2.2, 13.75),
                        Block.createCuboidShape(3.75, 1, 12.5, 12.25, 2, 13.5),
                        Block.createCuboidShape(3.75, 1, 2.5, 12.25, 2, 3.5)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(12, 7, 2, 14, 8, 4),
                        Block.createCuboidShape(12.25, 0, 2.25, 13.75, 7, 3.75),
                        Block.createCuboidShape(12.25, 0, 12.25, 13.75, 7, 13.75),
                        Block.createCuboidShape(2, 8, 2, 14, 9, 14),
                        Block.createCuboidShape(12, 7, 12, 14, 8, 14),
                        Block.createCuboidShape(2, 7, 2, 4, 8, 4),
                        Block.createCuboidShape(2.25, 0, 2.25, 3.75, 7, 3.75),
                        Block.createCuboidShape(2.25, 0, 12.25, 3.75, 7, 13.75),
                        Block.createCuboidShape(2, 7, 12, 4, 8, 14),
                        Block.createCuboidShape(2.25, 9, 2.25, 3.75, 20, 3.75),
                        Block.createCuboidShape(3.75, 15, 2.4499999999999993, 12.25, 19, 3.5500000000000007),
                        Block.createCuboidShape(3.75, 10, 2.4499999999999993, 12.25, 11, 3.5500000000000007),
                        Block.createCuboidShape(3.75, 12, 2.4499999999999993, 12.25, 13, 3.5500000000000007),
                        Block.createCuboidShape(12.25, 9, 2.25, 13.75, 20, 3.75),
                        Block.createCuboidShape(2.25, 0.8, 7.5, 13.75, 2.2, 8.5),
                        Block.createCuboidShape(2.5, 1, 3.75, 3.5, 2, 12.25),
                        Block.createCuboidShape(12.5, 1, 3.75, 13.5, 2, 12.25)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(12, 7, 12, 14, 8, 14),
                        Block.createCuboidShape(12.25, 0, 12.25, 13.75, 7, 13.75),
                        Block.createCuboidShape(2.25, 0, 12.25, 3.75, 7, 13.75),
                        Block.createCuboidShape(2, 8, 2, 14, 9, 14),
                        Block.createCuboidShape(2, 7, 12, 4, 8, 14),
                        Block.createCuboidShape(12, 7, 2, 14, 8, 4),
                        Block.createCuboidShape(12.25, 0, 2.25, 13.75, 7, 3.75),
                        Block.createCuboidShape(2.25, 0, 2.25, 3.75, 7, 3.75),
                        Block.createCuboidShape(2, 7, 2, 4, 8, 4),
                        Block.createCuboidShape(12.25, 9, 2.25, 13.75, 20, 3.75),
                        Block.createCuboidShape(12.45, 15, 3.75, 13.55, 19, 12.25),
                        Block.createCuboidShape(12.45, 10, 3.75, 13.55, 11, 12.25),
                        Block.createCuboidShape(12.45, 12, 3.75, 13.55, 13, 12.25),
                        Block.createCuboidShape(12.25, 9, 12.25, 13.75, 20, 13.75),
                        Block.createCuboidShape(7.5, 0.8, 2.25, 8.5, 2.2, 13.75),
                        Block.createCuboidShape(3.75, 1, 2.5, 12.25, 2, 3.5),
                        Block.createCuboidShape(3.75, 1, 12.5, 12.25, 2, 13.5)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get()
        );

        public static final VoxelShapeGroup CHAIR_4 = new VoxelShapeGroup(
                Stream.of(
                        Block.createCuboidShape(2.25, 0, 12.25, 3.75, 8, 13.75),
                        Block.createCuboidShape(2.25, 0, 2.25, 3.75, 8, 3.75),
                        Block.createCuboidShape(2, 8, 2, 14, 9, 14),
                        Block.createCuboidShape(12.25, 0, 12.25, 13.75, 8, 13.75),
                        Block.createCuboidShape(12.25, 0, 2.25, 13.75, 8, 3.75),
                        Block.createCuboidShape(12.25, 9, 12.25, 13.75, 20, 13.75),
                        Block.createCuboidShape(3.75, 10, 12.549999999999999, 12.25, 20, 13.55),
                        Block.createCuboidShape(2.25, 9, 12.25, 3.75, 20, 13.75),
                        Block.createCuboidShape(2.25, 20, 11.75, 3.75, 21, 13.75),
                        Block.createCuboidShape(12.25, 20, 11.75, 13.75, 21, 13.75),
                        Block.createCuboidShape(3.25, 1, 2.5, 12.75, 2, 3.5),
                        Block.createCuboidShape(3.25, 1, 12.5, 12.75, 2, 13.5),
                        Block.createCuboidShape(12.5, 1, 3.75, 13.5, 2, 12.25),
                        Block.createCuboidShape(2.5, 1, 3.75, 3.5, 2, 12.25)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(2.25, 0, 2.25, 3.75, 8, 3.75),
                        Block.createCuboidShape(12.25, 0, 2.25, 13.75, 8, 3.75),
                        Block.createCuboidShape(2, 8, 2, 14, 9, 14),
                        Block.createCuboidShape(2.25, 0, 12.25, 3.75, 8, 13.75),
                        Block.createCuboidShape(12.25, 0, 12.25, 13.75, 8, 13.75),
                        Block.createCuboidShape(2.25, 9, 12.25, 3.75, 20, 13.75),
                        Block.createCuboidShape(2.4499999999999993, 10, 3.75, 3.450000000000001, 20, 12.25),
                        Block.createCuboidShape(2.25, 9, 2.25, 3.75, 20, 3.75),
                        Block.createCuboidShape(2.25, 20, 2.25, 4.25, 21, 3.75),
                        Block.createCuboidShape(2.25, 20, 12.25, 4.25, 21, 13.75),
                        Block.createCuboidShape(12.5, 1, 3.25, 13.5, 2, 12.75),
                        Block.createCuboidShape(2.5, 1, 3.25, 3.5, 2, 12.75),
                        Block.createCuboidShape(3.75, 1, 12.5, 12.25, 2, 13.5),
                        Block.createCuboidShape(3.75, 1, 2.5, 12.25, 2, 3.5)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(12.25, 0, 2.25, 13.75, 8, 3.75),
                        Block.createCuboidShape(12.25, 0, 12.25, 13.75, 8, 13.75),
                        Block.createCuboidShape(2, 8, 2, 14, 9, 14),
                        Block.createCuboidShape(2.25, 0, 2.25, 3.75, 8, 3.75),
                        Block.createCuboidShape(2.25, 0, 12.25, 3.75, 8, 13.75),
                        Block.createCuboidShape(2.25, 9, 2.25, 3.75, 20, 3.75),
                        Block.createCuboidShape(3.75, 10, 2.4499999999999993, 12.25, 20, 3.450000000000001),
                        Block.createCuboidShape(12.25, 9, 2.25, 13.75, 20, 3.75),
                        Block.createCuboidShape(12.25, 20, 2.25, 13.75, 21, 4.25),
                        Block.createCuboidShape(2.25, 20, 2.25, 3.75, 21, 4.25),
                        Block.createCuboidShape(3.25, 1, 12.5, 12.75, 2, 13.5),
                        Block.createCuboidShape(3.25, 1, 2.5, 12.75, 2, 3.5),
                        Block.createCuboidShape(2.5, 1, 3.75, 3.5, 2, 12.25),
                        Block.createCuboidShape(12.5, 1, 3.75, 13.5, 2, 12.25)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(12.25, 0, 12.25, 13.75, 8, 13.75),
                        Block.createCuboidShape(2.25, 0, 12.25, 3.75, 8, 13.75),
                        Block.createCuboidShape(2, 8, 2, 14, 9, 14),
                        Block.createCuboidShape(12.25, 0, 2.25, 13.75, 8, 3.75),
                        Block.createCuboidShape(2.25, 0, 2.25, 3.75, 8, 3.75),
                        Block.createCuboidShape(12.25, 9, 2.25, 13.75, 20, 3.75),
                        Block.createCuboidShape(12.549999999999999, 10, 3.75, 13.55, 20, 12.25),
                        Block.createCuboidShape(12.25, 9, 12.25, 13.75, 20, 13.75),
                        Block.createCuboidShape(11.75, 20, 12.25, 13.75, 21, 13.75),
                        Block.createCuboidShape(11.75, 20, 2.25, 13.75, 21, 3.75),
                        Block.createCuboidShape(2.5, 1, 3.25, 3.5, 2, 12.75),
                        Block.createCuboidShape(12.5, 1, 3.25, 13.5, 2, 12.75),
                        Block.createCuboidShape(3.75, 1, 2.5, 12.25, 2, 3.5),
                        Block.createCuboidShape(3.75, 1, 12.5, 12.25, 2, 13.5)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get()
        );
        
        public static final VoxelShapeGroup CHAIR_5 = new VoxelShapeGroup(
                Stream.of(
                        Block.createCuboidShape(3.25, 0, 11.25, 4.75, 8, 12.75),
                        Block.createCuboidShape(3.25, 0, 3.25, 4.75, 8, 4.75),
                        Block.createCuboidShape(3, 8, 3, 13, 9, 13),
                        Block.createCuboidShape(11.25, 0, 11.25, 12.75, 8, 12.75),
                        Block.createCuboidShape(11.25, 0, 3.25, 12.75, 8, 4.75),
                        Block.createCuboidShape(4.75, 3, 3.5, 11.25, 4, 4.5),
                        Block.createCuboidShape(4.75, 3, 11.5, 11.25, 4, 12.5),
                        Block.createCuboidShape(10.25, 9, 11.75, 11.75, 11, 12.75),
                        Block.createCuboidShape(4.25, 9, 11.75, 5.75, 11, 12.75),
                        Block.createCuboidShape(3.75, 11, 11.75, 12.25, 22, 12.75)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(3.25, 0, 3.25, 4.75, 8, 4.75),
                        Block.createCuboidShape(11.25, 0, 3.25, 12.75, 8, 4.75),
                        Block.createCuboidShape(3, 8, 3, 13, 9, 13),
                        Block.createCuboidShape(3.25, 0, 11.25, 4.75, 8, 12.75),
                        Block.createCuboidShape(11.25, 0, 11.25, 12.75, 8, 12.75),
                        Block.createCuboidShape(11.5, 3, 4.75, 12.5, 4, 11.25),
                        Block.createCuboidShape(3.5, 3, 4.75, 4.5, 4, 11.25),
                        Block.createCuboidShape(3.25, 9, 10.25, 4.25, 11, 11.75),
                        Block.createCuboidShape(3.25, 9, 4.25, 4.25, 11, 5.75),
                        Block.createCuboidShape(3.25, 11, 3.75, 4.25, 22, 12.25)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(11.25, 0, 3.25, 12.75, 8, 4.75),
                        Block.createCuboidShape(11.25, 0, 11.25, 12.75, 8, 12.75),
                        Block.createCuboidShape(3, 8, 3, 13, 9, 13),
                        Block.createCuboidShape(3.25, 0, 3.25, 4.75, 8, 4.75),
                        Block.createCuboidShape(3.25, 0, 11.25, 4.75, 8, 12.75),
                        Block.createCuboidShape(4.75, 3, 11.5, 11.25, 4, 12.5),
                        Block.createCuboidShape(4.75, 3, 3.5, 11.25, 4, 4.5),
                        Block.createCuboidShape(4.25, 9, 3.25, 5.75, 11, 4.25),
                        Block.createCuboidShape(10.25, 9, 3.25, 11.75, 11, 4.25),
                        Block.createCuboidShape(3.75, 11, 3.25, 12.25, 22, 4.25)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
                Stream.of(
                        Block.createCuboidShape(11.25, 0, 11.25, 12.75, 8, 12.75),
                        Block.createCuboidShape(3.25, 0, 11.25, 4.75, 8, 12.75),
                        Block.createCuboidShape(3, 8, 3, 13, 9, 13),
                        Block.createCuboidShape(11.25, 0, 3.25, 12.75, 8, 4.75),
                        Block.createCuboidShape(3.25, 0, 3.25, 4.75, 8, 4.75),
                        Block.createCuboidShape(3.5, 3, 4.75, 4.5, 4, 11.25),
                        Block.createCuboidShape(11.5, 3, 4.75, 12.5, 4, 11.25),
                        Block.createCuboidShape(11.75, 9, 4.25, 12.75, 11, 5.75),
                        Block.createCuboidShape(11.75, 9, 10.25, 12.75, 11, 11.75),
                        Block.createCuboidShape(11.75, 11, 3.75, 12.75, 22, 12.25)
                ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get()
        );
        
    }

    public static final VoxelShapeGroup BENCH_1_LEFT = new VoxelShapeGroup(
            Stream.of(
                    Block.createCuboidShape(0, 6, 4, 16, 7, 12),
                    Block.createCuboidShape(14.5, 0, 4.25, 15.5, 6, 11.75),
                    Block.createCuboidShape(0, 1, 7.5, 14.5, 3, 8.5)
            ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
            Stream.of(
                    Block.createCuboidShape(4, 6, 0, 12, 7, 16),
                    Block.createCuboidShape(4.25, 0, 14.5, 11.75, 6, 15.5),
                    Block.createCuboidShape(7.5, 1, 0, 8.5, 3, 14.5)
            ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
            Stream.of(
                    Block.createCuboidShape(0, 6, 4, 16, 7, 12),
                    Block.createCuboidShape(0.5, 0, 4.25, 1.5, 6, 11.75),
                    Block.createCuboidShape(1.5, 1, 7.5, 16, 3, 8.5)
            ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
            Stream.of(
                    Block.createCuboidShape(4, 6, 0, 12, 7, 16),
                    Block.createCuboidShape(4.25, 0, 0.5, 11.75, 6, 1.5),
                    Block.createCuboidShape(7.5, 1, 1.5, 8.5, 3, 16)
            ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get()
    );

    public static final VoxelShapeGroup BENCH_1_RIGHT = new VoxelShapeGroup(
            Stream.of(
                    Block.createCuboidShape(0, 6, 4, 16, 7, 12),
                    Block.createCuboidShape(0.5, 0, 4.25, 1.5, 6, 11.75),
                    Block.createCuboidShape(1.5, 1, 7.5, 16, 3, 8.5)
            ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
            Stream.of(
                    Block.createCuboidShape(4, 6, 0, 12, 7, 16),
                    Block.createCuboidShape(4.25, 0, 0.5, 11.75, 6, 1.5),
                    Block.createCuboidShape(7.5, 1, 1.5, 8.5, 3, 16)
            ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
            Stream.of(
                    Block.createCuboidShape(0, 6, 4, 16, 7, 12),
                    Block.createCuboidShape(14.5, 0, 4.25, 15.5, 6, 11.75),
                    Block.createCuboidShape(0, 1, 7.5, 14.5, 3, 8.5)
            ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get(),
            Stream.of(
                    Block.createCuboidShape(4, 6, 0, 12, 7, 16),
                    Block.createCuboidShape(4.25, 0, 14.5, 11.75, 6, 15.5),
                    Block.createCuboidShape(7.5, 1, 0, 8.5, 3, 14.5)
            ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, BooleanBiFunction.OR)).get()
    );

}
